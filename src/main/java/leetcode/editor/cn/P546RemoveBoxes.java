//ÁªôÂá∫‰∏Ä‰∫õ‰∏çÂêåÈ¢úËâ≤ÁöÑÁõíÂ≠êÔºåÁõíÂ≠êÁöÑÈ¢úËâ≤Áî±Êï∞Â≠óË°®Á§∫ÔºåÂç≥‰∏çÂêåÁöÑÊï∞Â≠óË°®Á§∫‰∏çÂêåÁöÑÈ¢úËâ≤„ÄÇ 
//‰Ω†Â∞ÜÁªèËøáËã•Âπ≤ËΩÆÊìç‰ΩúÂéªÂéªÊéâÁõíÂ≠êÔºåÁõ¥Âà∞ÊâÄÊúâÁöÑÁõíÂ≠êÈÉΩÂéªÊéâ‰∏∫Ê≠¢„ÄÇÊØè‰∏ÄËΩÆ‰Ω†ÂèØ‰ª•ÁßªÈô§ÂÖ∑ÊúâÁõ∏ÂêåÈ¢úËâ≤ÁöÑËøûÁª≠ k ‰∏™ÁõíÂ≠êÔºàk >= 1ÔºâÔºåËøôÊ†∑‰∏ÄËΩÆ‰πãÂêé‰Ω†Â∞ÜÂæóÂà∞ k*k ‰∏™ÁßØÂàÜ
//„ÄÇ 
//ÂΩì‰Ω†Â∞ÜÊâÄÊúâÁõíÂ≠êÈÉΩÂéªÊéâ‰πãÂêéÔºåÊ±Ç‰Ω†ËÉΩËé∑ÂæóÁöÑÊúÄÂ§ßÁßØÂàÜÂíå„ÄÇ 
//
// 
//
// Á§∫‰æãÔºö 
//
// ËæìÂÖ•Ôºöboxes = [1,3,2,2,2,3,4,3,1]
//ËæìÂá∫Ôºö23
//Ëß£ÈáäÔºö
//[1, 3, 2, 2, 2, 3, 4, 3, 1] 
//----> [1, 3, 3, 4, 3, 1] (3*3=9 ÂàÜ) 
//----> [1, 3, 3, 3, 1] (1*1=1 ÂàÜ) 
//----> [1, 1] (3*3=9 ÂàÜ) 
//----> [] (2*2=4 ÂàÜ)
// 
//
// 
//
// ÊèêÁ§∫Ôºö 
//
// 
// 1 <= boxes.length <= 100 
// 1 <= boxes[i] <= 100 
// 
// Related Topics Ê∑±Â∫¶‰ºòÂÖàÊêúÁ¥¢ Âä®ÊÄÅËßÑÂàí 
// üëç 218 üëé 0

 
package leetcode.editor.cn;
//JavaÔºöÁßªÈô§ÁõíÂ≠ê
public class P546RemoveBoxes{
    public static void main(String[] args) {
        Solution solution = new P546RemoveBoxes().new Solution();
        // TO TEST
    }
    
//leetcode submit region begin(Prohibit modification and deletion)
class Solution {
    //Âä®ÊÄÅËßÑÂàí
    public int removeBoxes(int[] boxes) {
        int[][][] dp = new int[100][100][100];
        return calculatePoints(boxes, dp, 0, boxes.length - 1, 0);
    }

    public int calculatePoints(int[] boxes, int[][][] dp, int l, int r, int k) {
        if (l > r) return 0;
        if (dp[l][r][k] != 0) return dp[l][r][k];
        while (r > l && boxes[r] == boxes[r - 1]) {
            r--;
            k++;
        }
        dp[l][r][k] = calculatePoints(boxes, dp, l, r - 1, 0) + (k + 1) * (k + 1);
        for (int i = l; i < r; i++) {
            if (boxes[i] == boxes[r]) {
                dp[l][r][k] = Math.max(dp[l][r][k], calculatePoints(boxes, dp, l, i, k + 1) + calculatePoints(boxes, dp, i + 1, r - 1, 0));
            }
        }
        return dp[l][r][k];
    }
}
//leetcode submit region end(Prohibit modification and deletion)

}